# -*- mode: ruby -*-
# vi: set ft=ruby :

# Vagrant Cassandra Project
# https://github.com/bcantoni/vagrant-cassandra
# Brian Cantoni

# This template sets up one or more VMs with DataStax Enterprise (DSE) installed.
# Set these environment variables before running `vagrant up`:
#   Optional:
#     DEB_CACHE_HOST = Debian package cache, e.g. "http://192.168.1.100:8000" (default: no cache)

# Adjustable settings
INSTALLER_FILENAME = Dir['DataStaxEnterprise-*.run'].sort.last
CFG_MEMSIZE = "6000"    # max memory for each VM
CFG_TZ = "US/Pacific"   # timezone, like US/Pacific, US/Eastern, UTC, Europe/Warsaw, etc.
NETWORK = '10.10.11.'   # base IP for DSE nodes
FIRST_IP = 10

# number of nodes to create
DSE_NODES = 1

# make sure installer had already been downloaded
if !File.file?(INSTALLER_FILENAME)
  abort ("Installer file not found: #{INSTALLER_FILENAME}\nPlease download using steps explained in README.md")
end

# if local Debian proxy configured (DEB_CACHE_HOST), install and configure the proxy client
deb_cache_cmds = ""
if ENV['DEB_CACHE_HOST']
  deb_cache_host = ENV['DEB_CACHE_HOST']
  deb_cache_cmds = <<CACHE
apt-get install squid-deb-proxy-client -y
echo 'Acquire::http::Proxy "#{deb_cache_host}";' | sudo tee /etc/apt/apt.conf.d/30autoproxy
echo "Acquire::http::Proxy { debian.datastax.com DIRECT; };" | sudo tee -a /etc/apt/apt.conf.d/30autoproxy
echo "Acquire::http::Proxy { ppa.launchpad.net DIRECT; };" | sudo tee -a /etc/apt/apt.conf.d/30autoproxy
cat /etc/apt/apt.conf.d/30autoproxy
CACHE
end

# Provisioning script for DSE nodes (dse10, dse11, ...)
# todo: better dynamic generation of /etc/hosts list
node_script = <<SCRIPT
#!/bin/bash
cat > /etc/hosts <<EOF
127.0.0.1       localhost

# The following lines are desirable for IPv6 capable hosts
::1     ip6-localhost ip6-loopback
fe00::0 ip6-localnet
ff00::0 ip6-mcastprefix
ff02::1 ip6-allnodes
ff02::2 ip6-allrouters

10.10.11.10   dse10
10.10.11.11   dse11
10.10.11.12   dse12
10.10.11.13   dse13
10.10.11.14   dse14
10.10.11.15   dse15
EOF

# set timezone
echo "#{CFG_TZ}" > /etc/timezone    
dpkg-reconfigure -f noninteractive tzdata

#{deb_cache_cmds}

# install Java and a few base packages
add-apt-repository ppa:openjdk-r/ppa
apt-get update
apt-get install vim curl zip unzip git tree python-pip openjdk-8-jdk -y

# install DSE with unattended installer
#
# by default we do a services install, create Cassandra-only nodes, and set the first node (dse10) as the seed
#
# other options worth exploring include:
#  --node_type=search
#  --node_type=analytics
#  --analytics_type=spark_only
#  --ring_name
#
# refer to the documentation to see all the unattended options available:
#  http://docs.datastax.com/en/datastax_enterprise/4.8/datastax_enterprise/install/installSilent.html

#chmod +x /vagrant/#{INSTALLER_FILENAME}
#set -x
#sudo /vagrant/#{INSTALLER_FILENAME} --mode unattended --update_system 0 --seeds 10.10.11.10 --interface %s --start_services 1
#set +x

echo "Vagrant provisioning complete"
SCRIPT

# Configure VM servers
puts "Configured for #{DSE_NODES} DSE node(s)"
servers = []
(0..DSE_NODES-1).each do |i|
  name = 'dse1' + i.to_s
  ip = NETWORK + (FIRST_IP + i).to_s
  servers << {'name' => name, 'ip' => ip}
end

VAGRANTFILE_API_VERSION = "2"

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
  config.vm.box = "ubuntu/xenial64"
  servers.each do |server|
    config.vm.define server['name'] do |config2|
      config2.vm.hostname = server['name']
      server_ip = server['ip']
      config2.vm.network :private_network, ip: server_ip
      config2.vm.provision :shell, :inline => node_script % server_ip

      config2.vm.provider "vmware_fusion" do |v|
        v.vmx["memsize"]  = CFG_MEMSIZE
      end
      config2.vm.provider :virtualbox do |v|
        v.name = server['name']
        v.customize ["modifyvm", :id, "--memory", CFG_MEMSIZE]
        v.customize ["modifyvm", :id, "--cpus"  , "2"   ]
      end

    end
  end
end
